import{o as a,c as n,a as s}from"./app.3029eb60.js";const t='{"title":"👉 forEach","description":"","frontmatter":{},"headers":[{"level":2,"title":"👉 forEach","slug":"👉-foreach"},{"level":3,"title":"💠 语法","slug":"💠-语法"},{"level":3,"title":"⚠️ 注意","slug":"⚠️-注意"},{"level":3,"title":"✍️ 实现","slug":"✍️-实现"},{"level":3,"title":"🔗 参考链接","slug":"🔗-参考链接"}],"relativePath":"js/array/forEach/index.md","lastUpdated":1629935592707}',p={},e=[s('<h2 id="👉-foreach"><a class="header-anchor" href="#👉-foreach" aria-hidden="true">#</a> 👉 forEach</h2><blockquote><p>forEach() 方法对数组的每个元素执行一次给定的函数</p></blockquote><h3 id="💠-语法"><a class="header-anchor" href="#💠-语法" aria-hidden="true">#</a> 💠 语法</h3><div class="language-js"><pre><code>arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span>currentValue <span class="token punctuation">[</span><span class="token punctuation">,</span> index <span class="token punctuation">[</span><span class="token punctuation">,</span> array<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">,</span> thisArg<span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre></div><ul><li><code>callback</code> - 为数组中每个元素执行的函数，接收一至三个参数 <ul><li><code>currentValue</code> - 数组中正在处理的当前元素</li><li><code>index</code> [可选] - 数组中正在处理的当前元素的索引</li><li><code>array</code> [可选] - 调用 forEach() 方法的数组</li></ul></li><li><code>thisArg</code> [可选] - 当执行回调函数 callback 时，用作 this 的值</li><li>返回值 - <code>undefined</code></li></ul><h3 id="⚠️-注意"><a class="header-anchor" href="#⚠️-注意" aria-hidden="true">#</a> ⚠️ 注意</h3><p>除了抛出异常以外，没有办法中止或跳出 forEach() 循环</p><h3 id="✍️-实现"><a class="header-anchor" href="#✍️-实现" aria-hidden="true">#</a> ✍️ 实现</h3><div class="language-js"><pre><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myEach</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h4 id="📌-测试"><a class="header-anchor" href="#📌-测试" aria-hidden="true">#</a> 📌 测试</h4><div class="language-js"><pre><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;html&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\narr<span class="token punctuation">.</span><span class="token function">myEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><hr><h3 id="🔗-参考链接"><a class="header-anchor" href="#🔗-参考链接" aria-hidden="true">#</a> 🔗 参考链接</h3><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/NodeList/forEach" target="_blank" rel="noopener noreferrer">[MDN] NodeList.prototype.forEach()</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach" target="_blank" rel="noopener noreferrer">[MDN] Array.prototype.forEach()</a></li></ul>',14)];p.render=function(s,t,p,o,c,l){return a(),n("div",null,e)};export{t as __pageData,p as default};
