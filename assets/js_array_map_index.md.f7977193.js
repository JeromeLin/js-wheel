import{o as n,c as a,a as s}from"./app.3029eb60.js";const p='{"title":"👉 map","description":"","frontmatter":{},"headers":[{"level":2,"title":"👉 map","slug":"👉-map"},{"level":3,"title":"💠 语法","slug":"💠-语法"},{"level":3,"title":"✍️ 实现","slug":"✍️-实现"},{"level":3,"title":"🔗 参考链接","slug":"🔗-参考链接"}],"relativePath":"js/array/map/index.md","lastUpdated":1629935592707}',t={},o=[s('<h2 id="👉-map"><a class="header-anchor" href="#👉-map" aria-hidden="true">#</a> 👉 map</h2><blockquote><p>map() 方法创建一个新数组，其结果是该数组中的每个元素调用一次给定函数后的返回值</p></blockquote><h3 id="💠-语法"><a class="header-anchor" href="#💠-语法" aria-hidden="true">#</a> 💠 语法</h3><div class="language-js"><pre><code><span class="token keyword">var</span> new_array <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token parameter">currentValue<span class="token punctuation">[</span><span class="token punctuation">,</span> index<span class="token punctuation">[</span><span class="token punctuation">,</span> array<span class="token punctuation">]</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n <span class="token comment">// Return element for new_array</span>\n<span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">,</span> thisArg<span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre></div><ul><li><code>callback</code> - 生成新数组元素的函数，接收一至三个参数 <ul><li><code>currentValue</code> - 数组中正在处理的当前元素</li><li><code>index</code> [可选] - 数组中正在处理的当前元素的索引</li><li><code>array</code> [可选] - 调用 map() 方法的数组</li></ul></li><li><code>thisArg</code> [可选] - 当执行回调函数 callback 时，用作 this 的值</li><li>返回值 - 一个由原数组每个元素执行回调函数的结果组成的新数组</li></ul><h3 id="✍️-实现"><a class="header-anchor" href="#✍️-实现" aria-hidden="true">#</a> ✍️ 实现</h3><div class="language-js"><pre><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myMap</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h4 id="📌-测试"><a class="header-anchor" href="#📌-测试" aria-hidden="true">#</a> 📌 测试</h4><div class="language-js"><pre><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> newVal <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">myMap</span><span class="token punctuation">(</span><span class="token parameter">i</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 9, 16]</span>\n</code></pre></div><hr><h3 id="🔗-参考链接"><a class="header-anchor" href="#🔗-参考链接" aria-hidden="true">#</a> 🔗 参考链接</h3><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/map" target="_blank" rel="noopener noreferrer">[MDN] Array.prototype.map()</a></li></ul>',12)];t.render=function(s,p,t,e,c,l){return n(),a("div",null,o)};export{p as __pageData,t as default};
