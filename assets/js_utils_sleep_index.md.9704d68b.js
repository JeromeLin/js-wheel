import{o as n,c as s,a}from"./app.3029eb60.js";const e='{"title":"👉 sleep","description":"","frontmatter":{},"headers":[{"level":2,"title":"👉 sleep","slug":"👉-sleep"},{"level":3,"title":"✍️ 实现","slug":"✍️-实现"},{"level":3,"title":"🔗 参考链接","slug":"🔗-参考链接"}],"relativePath":"js/utils/sleep/index.md","lastUpdated":1629935592711}',t={},p=[a('<h2 id="👉-sleep"><a class="header-anchor" href="#👉-sleep" aria-hidden="true">#</a> 👉 sleep</h2><p>指定时间内函数暂停执行。 在 C 或 PHP 等编程语言中，可以调用 <code>sleep(2)</code> 使程序暂停 2 秒。 Java 有 <code>Thread.sleep(2000)</code>，Python 有 <code>time.sleep(2)</code>，Go 有 <code>time.Sleep(2 * time.Second)</code>。</p><p>JavaScript 没有原生的休眠功能，但由于引入了 promises（以及 ES2018 中的 <code>async/await</code>），我们可以用一种优雅地方式来实现此功能。</p><h3 id="✍️-实现"><a class="header-anchor" href="#✍️-实现" aria-hidden="true">#</a> ✍️ 实现</h3><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token parameter">ms</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> ms<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h4 id="📌-测试"><a class="header-anchor" href="#📌-测试" aria-hidden="true">#</a> 📌 测试</h4><div class="language-js"><pre><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">testSleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Taking a break...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Two seconds later, showing sleep in a loop...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// Sleep in loop</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">testSleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><hr><h3 id="🔗-参考链接"><a class="header-anchor" href="#🔗-参考链接" aria-hidden="true">#</a> 🔗 参考链接</h3><ul><li><a href="https://stackoverflow.com/questions/951021/what-is-the-javascript-version-of-sleep" target="_blank" rel="noopener noreferrer">What is the JavaScript version of sleep()?</a></li><li><a href="https://linux.die.net/man/3/sleep" target="_blank" rel="noopener noreferrer">[C] sleep(3) - Linux man page</a></li><li><a href="https://www.php.net/manual/en/function.sleep.php" target="_blank" rel="noopener noreferrer">[PHP] sleep</a></li><li><a href="https://docs.oracle.com/javase/tutorial/essential/concurrency/sleep.html" target="_blank" rel="noopener noreferrer">[Java] Pausing Execution with Sleep</a></li><li><a href="https://docs.python.org/3/library/time.html#time.sleep" target="_blank" rel="noopener noreferrer">[Python] time.sleep(secs)</a></li><li><a href="https://pkg.go.dev/time#Sleep" target="_blank" rel="noopener noreferrer">[Go] func Sleep</a></li></ul>',10)];t.render=function(a,e,t,o,c,l){return n(),s("div",null,p)};export{e as __pageData,t as default};
